// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  email       String        @unique
  password    String?
  role        Role          @default(USER)
  firstname   String
  lastname    String
  favorites   Recette[]     @relation("UserFavorites")
  Commentaire Commentaire[]
  notes       Note[]
  preferences Preference[] // Changez cette ligne pour définir une relation one-to-many avec "Preference"
}

model Recette {
  id           String        @id @default(uuid())
  title        String
  description  String
  instructions String?
  ingredients  String?
  Commentaire  Commentaire[]
  favorites    User[]        @relation("UserFavorites")
  notes        Note[] // Nouvelle relation avec les notes
}

model Commentaire {
  id         String   @id @default(uuid())
  userId     String
  recetteId  String
  text       String
  user       User     @relation(fields: [userId], references: [id])
  recette    Recette  @relation(fields: [recetteId], references: [id])
  created_at DateTime @default(now())
}

model Note {
  id        String  @id @default(uuid())
  userId    String
  recetteId String
  rating    Int // Le champ "rating" représente la note attribuée par l'utilisateur
  user      User    @relation(fields: [userId], references: [id])
  recette   Recette @relation(fields: [recetteId], references: [id])
}

model Preference {
  id                String   @id @default(uuid())
  userId            String
  allergies         String[]
  contreIndications String[]
  user              User     @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  USER
}
